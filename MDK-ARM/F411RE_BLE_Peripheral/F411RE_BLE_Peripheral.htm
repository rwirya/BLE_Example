<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [F411RE_BLE_Peripheral\F411RE_BLE_Peripheral.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image F411RE_BLE_Peripheral\F411RE_BLE_Peripheral.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Wed Jun 16 13:12:01 2021
<BR><P>
<H3>Maximum Stack Usage =        756 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; BlueNRG_Init &rArr; GAP_Peripheral_ConfigService &rArr; aci_gatt_add_char_desc &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[46]">APP_UserEvtRx</a> from ble_process.o(i.APP_UserEvtRx) referenced from ble_process.o(i.BlueNRG_Init)
 <LI><a href="#[4d]">BSP_GetTick</a> from custom_bus.o(i.BSP_GetTick) referenced from hci_tl_interface.o(i.hci_tl_lowlevel_init)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[15]">DMA1_Stream0_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[16]">DMA1_Stream1_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[17]">DMA1_Stream2_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[18]">DMA1_Stream3_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[19]">DMA1_Stream4_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream5_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream6_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[30]">DMA1_Stream7_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[34]">DMA2_Stream0_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[35]">DMA2_Stream1_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[36]">DMA2_Stream2_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[37]">DMA2_Stream3_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[38]">DMA2_Stream4_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[3a]">DMA2_Stream5_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[3b]">DMA2_Stream6_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[3c]">DMA2_Stream7_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from stm32f4xx_it.o(i.EXTI0_IRQHandler) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[2d]">EXTI15_10_IRQHandler</a> from stm32f4xx_it.o(i.EXTI15_10_IRQHandler) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[1d]">EXTI9_5_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[40]">FPU_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[49]">HCI_TL_SPI_DeInit</a> from hci_tl_interface.o(i.HCI_TL_SPI_DeInit) referenced from hci_tl_interface.o(i.hci_tl_lowlevel_init)
 <LI><a href="#[48]">HCI_TL_SPI_Init</a> from hci_tl_interface.o(i.HCI_TL_SPI_Init) referenced from hci_tl_interface.o(i.hci_tl_lowlevel_init)
 <LI><a href="#[4b]">HCI_TL_SPI_Receive</a> from hci_tl_interface.o(i.HCI_TL_SPI_Receive) referenced from hci_tl_interface.o(i.hci_tl_lowlevel_init)
 <LI><a href="#[4c]">HCI_TL_SPI_Reset</a> from hci_tl_interface.o(i.HCI_TL_SPI_Reset) referenced from hci_tl_interface.o(i.hci_tl_lowlevel_init)
 <LI><a href="#[4a]">HCI_TL_SPI_Send</a> from hci_tl_interface.o(i.HCI_TL_SPI_Send) referenced from hci_tl_interface.o(i.hci_tl_lowlevel_init)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f4xx_it.o(i.HardFault_Handler) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[26]">I2C1_ER_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[25]">I2C1_EV_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[28]">I2C2_ER_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[27]">I2C2_EV_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[3f]">I2C3_ER_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[3e]">I2C3_EV_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[39]">OTG_FS_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[2f]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f4xx_it.o(i.PendSV_Handler) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[2e]">RTC_Alarm_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[31]">SDIO_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[29]">SPI1_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[2a]">SPI2_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[33]">SPI3_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[41]">SPI4_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[42]">SPI5_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f4xx_it.o(i.SVC_Handler) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f4xx_it.o(i.SysTick_Handler) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[44]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f411xe.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[1e]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[21]">TIM1_CC_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[20]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[1f]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[22]">TIM2_IRQHandler</a> from stm32f4xx_it.o(i.TIM2_IRQHandler) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[23]">TIM3_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[24]">TIM4_IRQHandler</a> from stm32f4xx_it.o(i.TIM4_IRQHandler) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[32]">TIM5_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[2b]">USART1_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[2c]">USART2_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[3d]">USART6_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f411xe.o(.text) referenced from startup_stm32f411xe.o(RESET)
 <LI><a href="#[45]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f411xe.o(.text)
 <LI><a href="#[76]">aci_att_exchange_mtu_resp_event_process</a> from bluenrg1_events.o(i.aci_att_exchange_mtu_resp_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[7f]">aci_att_exec_write_resp_event_process</a> from bluenrg1_events.o(i.aci_att_exec_write_resp_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[78]">aci_att_find_by_type_value_resp_event_process</a> from bluenrg1_events.o(i.aci_att_find_by_type_value_resp_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[77]">aci_att_find_info_resp_event_process</a> from bluenrg1_events.o(i.aci_att_find_info_resp_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[7e]">aci_att_prepare_write_resp_event_process</a> from bluenrg1_events.o(i.aci_att_prepare_write_resp_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[7b]">aci_att_read_blob_resp_event_process</a> from bluenrg1_events.o(i.aci_att_read_blob_resp_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[7d]">aci_att_read_by_group_type_resp_event_process</a> from bluenrg1_events.o(i.aci_att_read_by_group_type_resp_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[79]">aci_att_read_by_type_resp_event_process</a> from bluenrg1_events.o(i.aci_att_read_by_type_resp_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[7c]">aci_att_read_multiple_resp_event_process</a> from bluenrg1_events.o(i.aci_att_read_multiple_resp_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[7a]">aci_att_read_resp_event_process</a> from bluenrg1_events.o(i.aci_att_read_resp_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[62]">aci_blue_crash_info_event_process</a> from bluenrg1_events.o(i.aci_blue_crash_info_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[61]">aci_blue_events_lost_event_process</a> from bluenrg1_events.o(i.aci_blue_events_lost_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[60]">aci_blue_initialized_event_process</a> from bluenrg1_events.o(i.aci_blue_initialized_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[6d]">aci_gap_addr_not_resolved_event_process</a> from bluenrg1_events.o(i.aci_gap_addr_not_resolved_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[69]">aci_gap_authorization_req_event_process</a> from bluenrg1_events.o(i.aci_gap_authorization_req_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[6b]">aci_gap_bond_lost_event_process</a> from bluenrg1_events.o(i.aci_gap_bond_lost_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[6f]">aci_gap_keypress_notification_event_process</a> from bluenrg1_events.o(i.aci_gap_keypress_notification_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[66]">aci_gap_limited_discoverable_event_process</a> from bluenrg1_events.o(i.aci_gap_limited_discoverable_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[6e]">aci_gap_numeric_comparison_value_event_process</a> from bluenrg1_events.o(i.aci_gap_numeric_comparison_value_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[67]">aci_gap_pairing_complete_event_process</a> from bluenrg1_events.o(i.aci_gap_pairing_complete_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[68]">aci_gap_pass_key_req_event_process</a> from bluenrg1_events.o(i.aci_gap_pass_key_req_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[6c]">aci_gap_proc_complete_event_process</a> from bluenrg1_events.o(i.aci_gap_proc_complete_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[6a]">aci_gap_slave_security_initiated_event_process</a> from bluenrg1_events.o(i.aci_gap_slave_security_initiated_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[74]">aci_gatt_attribute_modified_event_process</a> from bluenrg1_events.o(i.aci_gatt_attribute_modified_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[84]">aci_gatt_disc_read_char_by_uuid_resp_event_process</a> from bluenrg1_events.o(i.aci_gatt_disc_read_char_by_uuid_resp_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[83]">aci_gatt_error_resp_event_process</a> from bluenrg1_events.o(i.aci_gatt_error_resp_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[80]">aci_gatt_indication_event_process</a> from bluenrg1_events.o(i.aci_gatt_indication_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[81]">aci_gatt_notification_event_process</a> from bluenrg1_events.o(i.aci_gatt_notification_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[8a]">aci_gatt_prepare_write_permit_req_event_process</a> from bluenrg1_events.o(i.aci_gatt_prepare_write_permit_req_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[82]">aci_gatt_proc_complete_event_process</a> from bluenrg1_events.o(i.aci_gatt_proc_complete_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[75]">aci_gatt_proc_timeout_event_process</a> from bluenrg1_events.o(i.aci_gatt_proc_timeout_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[87]">aci_gatt_read_multi_permit_req_event_process</a> from bluenrg1_events.o(i.aci_gatt_read_multi_permit_req_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[86]">aci_gatt_read_permit_req_event_process</a> from bluenrg1_events.o(i.aci_gatt_read_permit_req_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[89]">aci_gatt_server_confirmation_event_process</a> from bluenrg1_events.o(i.aci_gatt_server_confirmation_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[88]">aci_gatt_tx_pool_available_event_process</a> from bluenrg1_events.o(i.aci_gatt_tx_pool_available_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[85]">aci_gatt_write_permit_req_event_process</a> from bluenrg1_events.o(i.aci_gatt_write_permit_req_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[63]">aci_hal_end_of_radio_activity_event_process</a> from bluenrg1_events.o(i.aci_hal_end_of_radio_activity_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[65]">aci_hal_fw_error_event_process</a> from bluenrg1_events.o(i.aci_hal_fw_error_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[64]">aci_hal_scan_req_report_event_process</a> from bluenrg1_events.o(i.aci_hal_scan_req_report_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[73]">aci_l2cap_command_reject_event_process</a> from bluenrg1_events.o(i.aci_l2cap_command_reject_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[72]">aci_l2cap_connection_update_req_event_process</a> from bluenrg1_events.o(i.aci_l2cap_connection_update_req_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[70]">aci_l2cap_connection_update_resp_event_process</a> from bluenrg1_events.o(i.aci_l2cap_connection_update_resp_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[71]">aci_l2cap_proc_timeout_event_process</a> from bluenrg1_events.o(i.aci_l2cap_proc_timeout_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[47]">fputc</a> from retarget_io.o(i.fputc) referenced from printfb.o(i.__0printf$bare)
 <LI><a href="#[54]">hci_data_buffer_overflow_event_process</a> from bluenrg1_events.o(i.hci_data_buffer_overflow_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[4f]">hci_disconnection_complete_event_process</a> from bluenrg1_events.o(i.hci_disconnection_complete_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[50]">hci_encryption_change_event_process</a> from bluenrg1_events.o(i.hci_encryption_change_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[55]">hci_encryption_key_refresh_complete_event_process</a> from bluenrg1_events.o(i.hci_encryption_key_refresh_complete_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[52]">hci_hardware_error_event_process</a> from bluenrg1_events.o(i.hci_hardware_error_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[57]">hci_le_advertising_report_event_process</a> from bluenrg1_events.o(i.hci_le_advertising_report_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[56]">hci_le_connection_complete_event_process</a> from bluenrg1_events.o(i.hci_le_connection_complete_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[58]">hci_le_connection_update_complete_event_process</a> from bluenrg1_events.o(i.hci_le_connection_update_complete_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[5b]">hci_le_data_length_change_event_process</a> from bluenrg1_events.o(i.hci_le_data_length_change_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[5f]">hci_le_direct_advertising_report_event_process</a> from bluenrg1_events.o(i.hci_le_direct_advertising_report_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[5e]">hci_le_enhanced_connection_complete_event_process</a> from bluenrg1_events.o(i.hci_le_enhanced_connection_complete_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[5d]">hci_le_generate_dhkey_complete_event_process</a> from bluenrg1_events.o(i.hci_le_generate_dhkey_complete_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[5a]">hci_le_long_term_key_request_event_process</a> from bluenrg1_events.o(i.hci_le_long_term_key_request_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[5c]">hci_le_read_local_p256_public_key_complete_event_process</a> from bluenrg1_events.o(i.hci_le_read_local_p256_public_key_complete_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[59]">hci_le_read_remote_used_features_complete_event_process</a> from bluenrg1_events.o(i.hci_le_read_remote_used_features_complete_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[53]">hci_number_of_completed_packets_event_process</a> from bluenrg1_events.o(i.hci_number_of_completed_packets_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[51]">hci_read_remote_version_information_complete_event_process</a> from bluenrg1_events.o(i.hci_read_remote_version_information_complete_event_process) referenced from bluenrg1_events.o(.constdata)
 <LI><a href="#[4e]">hci_tl_lowlevel_isr</a> from hci_tl_interface.o(i.hci_tl_lowlevel_isr) referenced from hci_tl_interface.o(i.hci_tl_lowlevel_init)
 <LI><a href="#[43]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[45]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(.text)
</UL>
<P><STRONG><a name="[138]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[8b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[93]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[139]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[13a]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[13b]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[13c]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[13d]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[13e]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f411xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[af]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_scan_response_data
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_write_config_data
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_update_char_value
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_service
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char_desc
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_discoverable
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_Peripheral_ConfigService
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[ab]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_MakeDeviceDiscoverable
</UL>

<P><STRONG><a name="[13f]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[140]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[141]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[d6]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_reset
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_scan_response_data
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rand
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_write_config_data
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_set_tx_power_level
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_update_char_value
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_service
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char_desc
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_discoverable
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_init
</UL>

<P><STRONG><a name="[142]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[a0]"></a>strncpy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_MakeDeviceDiscoverable
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_Init
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[143]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[144]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[8c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[145]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>APP_UserEvtRx</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, ble_process.o(i.APP_UserEvtRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APP_UserEvtRx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_process.o(i.BlueNRG_Init)
</UL>
<P><STRONG><a name="[4d]"></a>BSP_GetTick</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, custom_bus.o(i.BSP_GetTick))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hci_tl_interface.o(i.hci_tl_lowlevel_init)
</UL>
<P><STRONG><a name="[95]"></a>BSP_SPI1_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, custom_bus.o(i.BSP_SPI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BSP_SPI1_Init &rArr; SPI1_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_GetState
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_TL_SPI_Init
</UL>

<P><STRONG><a name="[99]"></a>BSP_SPI1_SendRecv</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, custom_bus.o(i.BSP_SPI1_SendRecv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BSP_SPI1_SendRecv &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_TL_SPI_Send
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_TL_SPI_Receive
</UL>

<P><STRONG><a name="[9b]"></a>BlueNRG_Init</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, ble_process.o(i.BlueNRG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = BlueNRG_Init &rArr; GAP_Peripheral_ConfigService &rArr; aci_gatt_add_char_desc &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_reset
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_set_tx_power_level
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_DeviceAddress
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Server_ResetConnectionStatus
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_Peripheral_ConfigService
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>BlueNRG_Loop</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ble_process.o(i.BlueNRG_Loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 628<LI>Call Chain = BlueNRG_Loop &rArr; BlueNRG_MakeDeviceDiscoverable &rArr; aci_gap_set_discoverable &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_user_evt_proc
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_MakeDeviceDiscoverable
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a9]"></a>BlueNRG_MakeDeviceDiscoverable</STRONG> (Thumb, 108 bytes, Stack size 64 bytes, ble_process.o(i.BlueNRG_MakeDeviceDiscoverable))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = BlueNRG_MakeDeviceDiscoverable &rArr; aci_gap_set_discoverable &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_scan_response_data
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_discoverable
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_Loop
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.EXTI0_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = EXTI15_10_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; TestUpdateCharacteristic &rArr; aci_gatt_update_char_value &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[9e]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f4xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_TL_SPI_Reset
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_Init
</UL>

<P><STRONG><a name="[133]"></a>HAL_EXTI_GetHandle</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_hal_exti.o(i.HAL_EXTI_GetHandle))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_tl_lowlevel_init
</UL>

<P><STRONG><a name="[ad]"></a>HAL_EXTI_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_hal_exti.o(i.HAL_EXTI_IRQHandler))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[134]"></a>HAL_EXTI_RegisterCallback</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_hal_exti.o(i.HAL_EXTI_RegisterCallback))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_tl_lowlevel_init
</UL>

<P><STRONG><a name="[d9]"></a>HAL_GPIO_DeInit</STRONG> (Thumb, 270 bytes, Stack size 36 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_TL_SPI_DeInit
</UL>

<P><STRONG><a name="[b3]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.HAL_GPIO_EXTI_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = HAL_GPIO_EXTI_Callback &rArr; TestUpdateCharacteristic &rArr; aci_gatt_update_char_value &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestUpdateCharacteristic
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[ae]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; TestUpdateCharacteristic &rArr; aci_gatt_update_char_value &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[d7]"></a>HAL_GPIO_Init</STRONG> (Thumb, 370 bytes, Stack size 40 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_TL_SPI_Init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_MspInit
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[dd]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsDataAvailable
</UL>

<P><STRONG><a name="[da]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_TL_SPI_Send
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_TL_SPI_Reset
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_TL_SPI_Receive
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_TL_SPI_Init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_attribute_modified_event
</UL>

<P><STRONG><a name="[94]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_TL_SPI_Send
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GetTick
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>

<P><STRONG><a name="[e5]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[b5]"></a>HAL_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f4xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b7]"></a>HAL_InitTick</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32f4xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[b8]"></a>HAL_MspInit</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32f4xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[db]"></a>HAL_NVIC_DisableIRQ</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_TL_SPI_Send
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_TL_SPI_Receive
</UL>

<P><STRONG><a name="[c5]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_tl_lowlevel_init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_TL_SPI_Send
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_TL_SPI_Receive
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[ba]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_tl_lowlevel_init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[b6]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[bc]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 288 bytes, Stack size 32 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[e9]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[e8]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[bd]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[be]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 840 bytes, Stack size 40 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[96]"></a>HAL_SPI_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(i.HAL_SPI_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SPI1_Init
</UL>

<P><STRONG><a name="[bf]"></a>HAL_SPI_Init</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, stm32f4xx_hal_spi.o(i.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_SPI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
</UL>

<P><STRONG><a name="[c0]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(i.HAL_SPI_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[9a]"></a>HAL_SPI_TransmitReceive</STRONG> (Thumb, 482 bytes, Stack size 40 bytes, stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SPI1_SendRecv
</UL>

<P><STRONG><a name="[b9]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[d0]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_BreakCallback))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[d2]"></a>HAL_TIMEx_CommutCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_CommutCallback))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[e0]"></a>HAL_TIMEx_MasterConfigSynchronization</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_MasterConfigSynchronization))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM4_Init
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
</UL>

<P><STRONG><a name="[c2]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM4_Init
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
</UL>

<P><STRONG><a name="[c3]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, stm32f4xx_hal_msp.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[c6]"></a>HAL_TIM_ConfigClockSource</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_ConfigClockSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_ConfigClockSource &rArr; TIM_TI2_ConfigInputStage
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI2_ConfigInputStage
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_ConfigInputStage
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRx_SetConfig
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM4_Init
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
</UL>

<P><STRONG><a name="[cc]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[cb]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 358 bytes, Stack size 16 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutCallback
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[cd]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[ce]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[cf]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[d1]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[d3]"></a>HAL_UART_Init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d4]"></a>HAL_UART_MspInit</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, stm32f4xx_hal_msp.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[a1]"></a>HAL_UART_Transmit</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_MakeDeviceDiscoverable
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_Init
</UL>

<P><STRONG><a name="[49]"></a>HCI_TL_SPI_DeInit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, hci_tl_interface.o(i.HCI_TL_SPI_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HCI_TL_SPI_DeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hci_tl_interface.o(i.hci_tl_lowlevel_init)
</UL>
<P><STRONG><a name="[48]"></a>HCI_TL_SPI_Init</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, hci_tl_interface.o(i.HCI_TL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HCI_TL_SPI_Init &rArr; BSP_SPI1_Init &rArr; SPI1_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SPI1_Init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hci_tl_interface.o(i.hci_tl_lowlevel_init)
</UL>
<P><STRONG><a name="[4b]"></a>HCI_TL_SPI_Receive</STRONG> (Thumb, 118 bytes, Stack size 56 bytes, hci_tl_interface.o(i.HCI_TL_SPI_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = HCI_TL_SPI_Receive &rArr; BSP_SPI1_SendRecv &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SPI1_SendRecv
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hci_tl_interface.o(i.hci_tl_lowlevel_init)
</UL>
<P><STRONG><a name="[4c]"></a>HCI_TL_SPI_Reset</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, hci_tl_interface.o(i.HCI_TL_SPI_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HCI_TL_SPI_Reset &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hci_tl_interface.o(i.hci_tl_lowlevel_init)
</UL>
<P><STRONG><a name="[4a]"></a>HCI_TL_SPI_Send</STRONG> (Thumb, 170 bytes, Stack size 56 bytes, hci_tl_interface.o(i.HCI_TL_SPI_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = HCI_TL_SPI_Send &rArr; BSP_SPI1_SendRecv &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsDataAvailable
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SPI1_SendRecv
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hci_tl_interface.o(i.hci_tl_lowlevel_init)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[98]"></a>MX_SPI1_Init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, custom_bus.o(i.MX_SPI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MX_SPI1_Init &rArr; HAL_SPI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SPI1_Init
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[e6]"></a>SystemClock_Config</STRONG> (Thumb, 120 bytes, Stack size 88 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44]"></a>SystemInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, system_stm32f4xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(.text)
</UL>
<P><STRONG><a name="[22]"></a>TIM2_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM2_IRQHandler &rArr; HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM4_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.TIM4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM4_IRQHandler &rArr; HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[c4]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, stm32f4xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[c7]"></a>TIM_ETR_SetConfig</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.TIM_ETR_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[b4]"></a>TestUpdateCharacteristic</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, ble_process.o(i.TestUpdateCharacteristic))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = TestUpdateCharacteristic &rArr; aci_gatt_update_char_value &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_update_char_value
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f411xe.o(RESET)
</UL>
<P><STRONG><a name="[ea]"></a>__0printf$bare</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, printfb.o(i.__0printf$bare), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[146]"></a>__1printf$bare</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfb.o(i.__0printf$bare), UNUSED)

<P><STRONG><a name="[137]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfb.o(i.__0printf$bare))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[147]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[148]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[149]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[ec]"></a>aci_att_exchange_mtu_resp_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_att_exchange_mtu_resp_event))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_att_exchange_mtu_resp_event_process
</UL>

<P><STRONG><a name="[76]"></a>aci_att_exchange_mtu_resp_event_process</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_att_exchange_mtu_resp_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_att_exchange_mtu_resp_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_att_exchange_mtu_resp_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[ed]"></a>aci_att_exec_write_resp_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_att_exec_write_resp_event))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_att_exec_write_resp_event_process
</UL>

<P><STRONG><a name="[7f]"></a>aci_att_exec_write_resp_event_process</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_att_exec_write_resp_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_att_exec_write_resp_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_att_exec_write_resp_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[ee]"></a>aci_att_find_by_type_value_resp_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_att_find_by_type_value_resp_event))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_att_find_by_type_value_resp_event_process
</UL>

<P><STRONG><a name="[78]"></a>aci_att_find_by_type_value_resp_event_process</STRONG> (Thumb, 54 bytes, Stack size 144 bytes, bluenrg1_events.o(i.aci_att_find_by_type_value_resp_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = aci_att_find_by_type_value_resp_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_att_find_by_type_value_resp_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[ef]"></a>aci_att_find_info_resp_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_att_find_info_resp_event))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_att_find_info_resp_event_process
</UL>

<P><STRONG><a name="[77]"></a>aci_att_find_info_resp_event_process</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, bluenrg1_events.o(i.aci_att_find_info_resp_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = aci_att_find_info_resp_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_att_find_info_resp_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[f0]"></a>aci_att_prepare_write_resp_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_att_prepare_write_resp_event))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_att_prepare_write_resp_event_process
</UL>

<P><STRONG><a name="[7e]"></a>aci_att_prepare_write_resp_event_process</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, bluenrg1_events.o(i.aci_att_prepare_write_resp_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = aci_att_prepare_write_resp_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_att_prepare_write_resp_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[f1]"></a>aci_att_read_blob_resp_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_att_read_blob_resp_event))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_att_read_blob_resp_event_process
</UL>

<P><STRONG><a name="[7b]"></a>aci_att_read_blob_resp_event_process</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_att_read_blob_resp_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_att_read_blob_resp_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_att_read_blob_resp_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[f2]"></a>aci_att_read_by_group_type_resp_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_att_read_by_group_type_resp_event))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_att_read_by_group_type_resp_event_process
</UL>

<P><STRONG><a name="[7d]"></a>aci_att_read_by_group_type_resp_event_process</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, bluenrg1_events.o(i.aci_att_read_by_group_type_resp_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = aci_att_read_by_group_type_resp_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_att_read_by_group_type_resp_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[f3]"></a>aci_att_read_by_type_resp_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_att_read_by_type_resp_event))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_att_read_by_type_resp_event_process
</UL>

<P><STRONG><a name="[79]"></a>aci_att_read_by_type_resp_event_process</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, bluenrg1_events.o(i.aci_att_read_by_type_resp_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = aci_att_read_by_type_resp_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_att_read_by_type_resp_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[f4]"></a>aci_att_read_multiple_resp_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_att_read_multiple_resp_event))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_att_read_multiple_resp_event_process
</UL>

<P><STRONG><a name="[7c]"></a>aci_att_read_multiple_resp_event_process</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_att_read_multiple_resp_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_att_read_multiple_resp_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_att_read_multiple_resp_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[f5]"></a>aci_att_read_resp_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_att_read_resp_event))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_att_read_resp_event_process
</UL>

<P><STRONG><a name="[7a]"></a>aci_att_read_resp_event_process</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_att_read_resp_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_att_read_resp_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_att_read_resp_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[f6]"></a>aci_blue_crash_info_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_blue_crash_info_event))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_blue_crash_info_event_process
</UL>

<P><STRONG><a name="[62]"></a>aci_blue_crash_info_event_process</STRONG> (Thumb, 76 bytes, Stack size 48 bytes, bluenrg1_events.o(i.aci_blue_crash_info_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = aci_blue_crash_info_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_blue_crash_info_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[f7]"></a>aci_blue_events_lost_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_blue_events_lost_event))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_blue_events_lost_event_process
</UL>

<P><STRONG><a name="[61]"></a>aci_blue_events_lost_event_process</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_blue_events_lost_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_blue_events_lost_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_blue_events_lost_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[f8]"></a>aci_blue_initialized_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_blue_initialized_event))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_blue_initialized_event_process
</UL>

<P><STRONG><a name="[60]"></a>aci_blue_initialized_event_process</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_blue_initialized_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_blue_initialized_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_blue_initialized_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[f9]"></a>aci_gap_addr_not_resolved_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_gap_addr_not_resolved_event))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_addr_not_resolved_event_process
</UL>

<P><STRONG><a name="[6d]"></a>aci_gap_addr_not_resolved_event_process</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_gap_addr_not_resolved_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_gap_addr_not_resolved_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_addr_not_resolved_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[fa]"></a>aci_gap_authorization_req_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_gap_authorization_req_event))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_authorization_req_event_process
</UL>

<P><STRONG><a name="[69]"></a>aci_gap_authorization_req_event_process</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_gap_authorization_req_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_gap_authorization_req_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_authorization_req_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[fb]"></a>aci_gap_bond_lost_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_gap_bond_lost_event))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_bond_lost_event_process
</UL>

<P><STRONG><a name="[6b]"></a>aci_gap_bond_lost_event_process</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_gap_bond_lost_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_gap_bond_lost_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_bond_lost_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[a4]"></a>aci_gap_init</STRONG> (Thumb, 112 bytes, Stack size 312 bytes, bluenrg1_gap_aci.o(i.aci_gap_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = aci_gap_init &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_Init
</UL>

<P><STRONG><a name="[fd]"></a>aci_gap_keypress_notification_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_gap_keypress_notification_event))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_keypress_notification_event_process
</UL>

<P><STRONG><a name="[6f]"></a>aci_gap_keypress_notification_event_process</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_gap_keypress_notification_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_gap_keypress_notification_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_keypress_notification_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[fe]"></a>aci_gap_limited_discoverable_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_gap_limited_discoverable_event))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_limited_discoverable_event_process
</UL>

<P><STRONG><a name="[66]"></a>aci_gap_limited_discoverable_event_process</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_gap_limited_discoverable_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_gap_limited_discoverable_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_limited_discoverable_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[ff]"></a>aci_gap_numeric_comparison_value_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_gap_numeric_comparison_value_event))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_numeric_comparison_value_event_process
</UL>

<P><STRONG><a name="[6e]"></a>aci_gap_numeric_comparison_value_event_process</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_gap_numeric_comparison_value_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_gap_numeric_comparison_value_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_numeric_comparison_value_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[100]"></a>aci_gap_pairing_complete_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_gap_pairing_complete_event))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_pairing_complete_event_process
</UL>

<P><STRONG><a name="[67]"></a>aci_gap_pairing_complete_event_process</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_gap_pairing_complete_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_gap_pairing_complete_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_pairing_complete_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[101]"></a>aci_gap_pass_key_req_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_gap_pass_key_req_event))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_pass_key_req_event_process
</UL>

<P><STRONG><a name="[68]"></a>aci_gap_pass_key_req_event_process</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_gap_pass_key_req_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_gap_pass_key_req_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_pass_key_req_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[102]"></a>aci_gap_proc_complete_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_gap_proc_complete_event))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_proc_complete_event_process
</UL>

<P><STRONG><a name="[6c]"></a>aci_gap_proc_complete_event_process</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, bluenrg1_events.o(i.aci_gap_proc_complete_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = aci_gap_proc_complete_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_proc_complete_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[ac]"></a>aci_gap_set_discoverable</STRONG> (Thumb, 166 bytes, Stack size 336 bytes, bluenrg1_gap_aci.o(i.aci_gap_set_discoverable))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = aci_gap_set_discoverable &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_MakeDeviceDiscoverable
</UL>

<P><STRONG><a name="[103]"></a>aci_gap_slave_security_initiated_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_gap_slave_security_initiated_event))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_slave_security_initiated_event_process
</UL>

<P><STRONG><a name="[6a]"></a>aci_gap_slave_security_initiated_event_process</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_gap_slave_security_initiated_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_gap_slave_security_initiated_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_slave_security_initiated_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[b1]"></a>aci_gatt_add_char</STRONG> (Thumb, 190 bytes, Stack size 328 bytes, bluenrg1_gatt_aci.o(i.aci_gatt_add_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = aci_gatt_add_char &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_Peripheral_ConfigService
</UL>

<P><STRONG><a name="[b2]"></a>aci_gatt_add_char_desc</STRONG> (Thumb, 246 bytes, Stack size 328 bytes, bluenrg1_gatt_aci.o(i.aci_gatt_add_char_desc))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = aci_gatt_add_char_desc &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_Peripheral_ConfigService
</UL>

<P><STRONG><a name="[b0]"></a>aci_gatt_add_service</STRONG> (Thumb, 154 bytes, Stack size 320 bytes, bluenrg1_gatt_aci.o(i.aci_gatt_add_service))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = aci_gatt_add_service &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_Peripheral_ConfigService
</UL>

<P><STRONG><a name="[104]"></a>aci_gatt_attribute_modified_event</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, ble_process.o(i.aci_gatt_attribute_modified_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = aci_gatt_attribute_modified_event &rArr; aci_gatt_update_char_value &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_update_char_value
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_attribute_modified_event_process
</UL>

<P><STRONG><a name="[74]"></a>aci_gatt_attribute_modified_event_process</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, bluenrg1_events.o(i.aci_gatt_attribute_modified_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = aci_gatt_attribute_modified_event_process &rArr; aci_gatt_attribute_modified_event &rArr; aci_gatt_update_char_value &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_attribute_modified_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[105]"></a>aci_gatt_disc_read_char_by_uuid_resp_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_gatt_disc_read_char_by_uuid_resp_event))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_disc_read_char_by_uuid_resp_event_process
</UL>

<P><STRONG><a name="[84]"></a>aci_gatt_disc_read_char_by_uuid_resp_event_process</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, bluenrg1_events.o(i.aci_gatt_disc_read_char_by_uuid_resp_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = aci_gatt_disc_read_char_by_uuid_resp_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_disc_read_char_by_uuid_resp_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[106]"></a>aci_gatt_error_resp_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_gatt_error_resp_event))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_error_resp_event_process
</UL>

<P><STRONG><a name="[83]"></a>aci_gatt_error_resp_event_process</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_gatt_error_resp_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_gatt_error_resp_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_error_resp_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[107]"></a>aci_gatt_indication_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_gatt_indication_event))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_indication_event_process
</UL>

<P><STRONG><a name="[80]"></a>aci_gatt_indication_event_process</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, bluenrg1_events.o(i.aci_gatt_indication_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = aci_gatt_indication_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_indication_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[a3]"></a>aci_gatt_init</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, bluenrg1_gatt_aci.o(i.aci_gatt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = aci_gatt_init &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_Init
</UL>

<P><STRONG><a name="[108]"></a>aci_gatt_notification_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ble_process.o(i.aci_gatt_notification_event))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_notification_event_process
</UL>

<P><STRONG><a name="[81]"></a>aci_gatt_notification_event_process</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, bluenrg1_events.o(i.aci_gatt_notification_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = aci_gatt_notification_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_notification_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[109]"></a>aci_gatt_prepare_write_permit_req_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_gatt_prepare_write_permit_req_event))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_prepare_write_permit_req_event_process
</UL>

<P><STRONG><a name="[8a]"></a>aci_gatt_prepare_write_permit_req_event_process</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, bluenrg1_events.o(i.aci_gatt_prepare_write_permit_req_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = aci_gatt_prepare_write_permit_req_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_prepare_write_permit_req_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[10a]"></a>aci_gatt_proc_complete_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_gatt_proc_complete_event))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_proc_complete_event_process
</UL>

<P><STRONG><a name="[82]"></a>aci_gatt_proc_complete_event_process</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_gatt_proc_complete_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_gatt_proc_complete_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_proc_complete_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[10b]"></a>aci_gatt_proc_timeout_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_gatt_proc_timeout_event))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_proc_timeout_event_process
</UL>

<P><STRONG><a name="[75]"></a>aci_gatt_proc_timeout_event_process</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_gatt_proc_timeout_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_gatt_proc_timeout_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_proc_timeout_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[10c]"></a>aci_gatt_read_multi_permit_req_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_gatt_read_multi_permit_req_event))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_read_multi_permit_req_event_process
</UL>

<P><STRONG><a name="[87]"></a>aci_gatt_read_multi_permit_req_event_process</STRONG> (Thumb, 46 bytes, Stack size 136 bytes, bluenrg1_events.o(i.aci_gatt_read_multi_permit_req_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = aci_gatt_read_multi_permit_req_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_read_multi_permit_req_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[10d]"></a>aci_gatt_read_permit_req_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_gatt_read_permit_req_event))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_read_permit_req_event_process
</UL>

<P><STRONG><a name="[86]"></a>aci_gatt_read_permit_req_event_process</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_gatt_read_permit_req_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_gatt_read_permit_req_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_read_permit_req_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[10e]"></a>aci_gatt_server_confirmation_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_gatt_server_confirmation_event))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_server_confirmation_event_process
</UL>

<P><STRONG><a name="[89]"></a>aci_gatt_server_confirmation_event_process</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_gatt_server_confirmation_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_gatt_server_confirmation_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_server_confirmation_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[10f]"></a>aci_gatt_tx_pool_available_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_gatt_tx_pool_available_event))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_tx_pool_available_event_process
</UL>

<P><STRONG><a name="[88]"></a>aci_gatt_tx_pool_available_event_process</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_gatt_tx_pool_available_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_gatt_tx_pool_available_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_tx_pool_available_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[e7]"></a>aci_gatt_update_char_value</STRONG> (Thumb, 108 bytes, Stack size 312 bytes, bluenrg1_gatt_aci.o(i.aci_gatt_update_char_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = aci_gatt_update_char_value &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_attribute_modified_event
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestUpdateCharacteristic
</UL>

<P><STRONG><a name="[110]"></a>aci_gatt_write_permit_req_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_gatt_write_permit_req_event))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_write_permit_req_event_process
</UL>

<P><STRONG><a name="[85]"></a>aci_gatt_write_permit_req_event_process</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, bluenrg1_events.o(i.aci_gatt_write_permit_req_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = aci_gatt_write_permit_req_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_write_permit_req_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[111]"></a>aci_hal_end_of_radio_activity_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_hal_end_of_radio_activity_event))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_end_of_radio_activity_event_process
</UL>

<P><STRONG><a name="[63]"></a>aci_hal_end_of_radio_activity_event_process</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_hal_end_of_radio_activity_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_hal_end_of_radio_activity_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_end_of_radio_activity_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[112]"></a>aci_hal_fw_error_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_hal_fw_error_event))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_fw_error_event_process
</UL>

<P><STRONG><a name="[65]"></a>aci_hal_fw_error_event_process</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_hal_fw_error_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_hal_fw_error_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_fw_error_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[113]"></a>aci_hal_scan_req_report_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_hal_scan_req_report_event))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_scan_req_report_event_process
</UL>

<P><STRONG><a name="[64]"></a>aci_hal_scan_req_report_event_process</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_hal_scan_req_report_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_hal_scan_req_report_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_scan_req_report_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[9f]"></a>aci_hal_set_tx_power_level</STRONG> (Thumb, 78 bytes, Stack size 304 bytes, bluenrg1_hal_aci.o(i.aci_hal_set_tx_power_level))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = aci_hal_set_tx_power_level &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_Init
</UL>

<P><STRONG><a name="[e4]"></a>aci_hal_write_config_data</STRONG> (Thumb, 98 bytes, Stack size 304 bytes, bluenrg1_hal_aci.o(i.aci_hal_write_config_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = aci_hal_write_config_data &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_DeviceAddress
</UL>

<P><STRONG><a name="[114]"></a>aci_l2cap_command_reject_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_l2cap_command_reject_event))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_l2cap_command_reject_event_process
</UL>

<P><STRONG><a name="[73]"></a>aci_l2cap_command_reject_event_process</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, bluenrg1_events.o(i.aci_l2cap_command_reject_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = aci_l2cap_command_reject_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_l2cap_command_reject_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[115]"></a>aci_l2cap_connection_update_req_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_l2cap_connection_update_req_event))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_l2cap_connection_update_req_event_process
</UL>

<P><STRONG><a name="[72]"></a>aci_l2cap_connection_update_req_event_process</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, bluenrg1_events.o(i.aci_l2cap_connection_update_req_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = aci_l2cap_connection_update_req_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_l2cap_connection_update_req_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[116]"></a>aci_l2cap_connection_update_resp_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_l2cap_connection_update_resp_event))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_l2cap_connection_update_resp_event_process
</UL>

<P><STRONG><a name="[70]"></a>aci_l2cap_connection_update_resp_event_process</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_l2cap_connection_update_resp_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_l2cap_connection_update_resp_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_l2cap_connection_update_resp_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[117]"></a>aci_l2cap_proc_timeout_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.aci_l2cap_proc_timeout_event))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_l2cap_proc_timeout_event_process
</UL>

<P><STRONG><a name="[71]"></a>aci_l2cap_proc_timeout_event_process</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bluenrg1_events.o(i.aci_l2cap_proc_timeout_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aci_l2cap_proc_timeout_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_l2cap_proc_timeout_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[47]"></a>fputc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, retarget_io.o(i.fputc))
<BR>[Address Reference Count : 1]<UL><LI> printfb.o(i.__0printf$bare)
</UL>
<P><STRONG><a name="[118]"></a>hci_data_buffer_overflow_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.hci_data_buffer_overflow_event))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_data_buffer_overflow_event_process
</UL>

<P><STRONG><a name="[54]"></a>hci_data_buffer_overflow_event_process</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bluenrg1_events.o(i.hci_data_buffer_overflow_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_data_buffer_overflow_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_data_buffer_overflow_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[119]"></a>hci_disconnection_complete_event</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ble_process.o(i.hci_disconnection_complete_event))
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Server_ResetConnectionStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disconnection_complete_event_process
</UL>

<P><STRONG><a name="[4f]"></a>hci_disconnection_complete_event_process</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bluenrg1_events.o(i.hci_disconnection_complete_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_disconnection_complete_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disconnection_complete_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[11a]"></a>hci_encryption_change_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.hci_encryption_change_event))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_encryption_change_event_process
</UL>

<P><STRONG><a name="[50]"></a>hci_encryption_change_event_process</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bluenrg1_events.o(i.hci_encryption_change_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_encryption_change_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_encryption_change_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[11b]"></a>hci_encryption_key_refresh_complete_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.hci_encryption_key_refresh_complete_event))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_encryption_key_refresh_complete_event_process
</UL>

<P><STRONG><a name="[55]"></a>hci_encryption_key_refresh_complete_event_process</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bluenrg1_events.o(i.hci_encryption_key_refresh_complete_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_encryption_key_refresh_complete_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_encryption_key_refresh_complete_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[11c]"></a>hci_hardware_error_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.hci_hardware_error_event))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_hardware_error_event_process
</UL>

<P><STRONG><a name="[52]"></a>hci_hardware_error_event_process</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bluenrg1_events.o(i.hci_hardware_error_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_hardware_error_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_hardware_error_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[9c]"></a>hci_init</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, hci_tl.o(i.hci_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hci_init &rArr; hci_tl_lowlevel_init &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_tl_lowlevel_init
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_tail
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init_head
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_Init
</UL>

<P><STRONG><a name="[120]"></a>hci_le_advertising_report_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.hci_le_advertising_report_event))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_advertising_report_event_process
</UL>

<P><STRONG><a name="[57]"></a>hci_le_advertising_report_event_process</STRONG> (Thumb, 108 bytes, Stack size 144 bytes, bluenrg1_events.o(i.hci_le_advertising_report_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = hci_le_advertising_report_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_advertising_report_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[121]"></a>hci_le_connection_complete_event</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ble_process.o(i.hci_le_connection_complete_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hci_le_connection_complete_event
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_connection_complete_event_process
</UL>

<P><STRONG><a name="[56]"></a>hci_le_connection_complete_event_process</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, bluenrg1_events.o(i.hci_le_connection_complete_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hci_le_connection_complete_event_process &rArr; hci_le_connection_complete_event
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_connection_complete_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[122]"></a>hci_le_connection_update_complete_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.hci_le_connection_update_complete_event))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_connection_update_complete_event_process
</UL>

<P><STRONG><a name="[58]"></a>hci_le_connection_update_complete_event_process</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, bluenrg1_events.o(i.hci_le_connection_update_complete_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hci_le_connection_update_complete_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_connection_update_complete_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[123]"></a>hci_le_data_length_change_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.hci_le_data_length_change_event))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_data_length_change_event_process
</UL>

<P><STRONG><a name="[5b]"></a>hci_le_data_length_change_event_process</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, bluenrg1_events.o(i.hci_le_data_length_change_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hci_le_data_length_change_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_data_length_change_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[124]"></a>hci_le_direct_advertising_report_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.hci_le_direct_advertising_report_event))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_direct_advertising_report_event_process
</UL>

<P><STRONG><a name="[5f]"></a>hci_le_direct_advertising_report_event_process</STRONG> (Thumb, 88 bytes, Stack size 144 bytes, bluenrg1_events.o(i.hci_le_direct_advertising_report_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = hci_le_direct_advertising_report_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_direct_advertising_report_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[125]"></a>hci_le_enhanced_connection_complete_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.hci_le_enhanced_connection_complete_event))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_enhanced_connection_complete_event_process
</UL>

<P><STRONG><a name="[5e]"></a>hci_le_enhanced_connection_complete_event_process</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, bluenrg1_events.o(i.hci_le_enhanced_connection_complete_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hci_le_enhanced_connection_complete_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_enhanced_connection_complete_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[126]"></a>hci_le_generate_dhkey_complete_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.hci_le_generate_dhkey_complete_event))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_generate_dhkey_complete_event_process
</UL>

<P><STRONG><a name="[5d]"></a>hci_le_generate_dhkey_complete_event_process</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bluenrg1_events.o(i.hci_le_generate_dhkey_complete_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_le_generate_dhkey_complete_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_generate_dhkey_complete_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[127]"></a>hci_le_long_term_key_request_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.hci_le_long_term_key_request_event))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_long_term_key_request_event_process
</UL>

<P><STRONG><a name="[5a]"></a>hci_le_long_term_key_request_event_process</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bluenrg1_events.o(i.hci_le_long_term_key_request_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_le_long_term_key_request_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_long_term_key_request_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[e3]"></a>hci_le_rand</STRONG> (Thumb, 84 bytes, Stack size 48 bytes, bluenrg1_hci_le.o(i.hci_le_rand))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = hci_le_rand &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_DeviceAddress
</UL>

<P><STRONG><a name="[128]"></a>hci_le_read_local_p256_public_key_complete_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.hci_le_read_local_p256_public_key_complete_event))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_read_local_p256_public_key_complete_event_process
</UL>

<P><STRONG><a name="[5c]"></a>hci_le_read_local_p256_public_key_complete_event_process</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bluenrg1_events.o(i.hci_le_read_local_p256_public_key_complete_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_le_read_local_p256_public_key_complete_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_read_local_p256_public_key_complete_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[129]"></a>hci_le_read_remote_used_features_complete_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.hci_le_read_remote_used_features_complete_event))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_read_remote_used_features_complete_event_process
</UL>

<P><STRONG><a name="[59]"></a>hci_le_read_remote_used_features_complete_event_process</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bluenrg1_events.o(i.hci_le_read_remote_used_features_complete_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_le_read_remote_used_features_complete_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_read_remote_used_features_complete_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[aa]"></a>hci_le_set_scan_response_data</STRONG> (Thumb, 86 bytes, Stack size 304 bytes, bluenrg1_hci_le.o(i.hci_le_set_scan_response_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = hci_le_set_scan_response_data &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_MakeDeviceDiscoverable
</UL>

<P><STRONG><a name="[12a]"></a>hci_notify_asynch_evt</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, hci_tl.o(i.hci_notify_asynch_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = hci_notify_asynch_evt &rArr; list_remove_head
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_head
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_is_empty
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_tail
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_head
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_tl_lowlevel_isr
</UL>

<P><STRONG><a name="[12e]"></a>hci_number_of_completed_packets_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.hci_number_of_completed_packets_event))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_number_of_completed_packets_event_process
</UL>

<P><STRONG><a name="[53]"></a>hci_number_of_completed_packets_event_process</STRONG> (Thumb, 54 bytes, Stack size 144 bytes, bluenrg1_events.o(i.hci_number_of_completed_packets_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = hci_number_of_completed_packets_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_number_of_completed_packets_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[12f]"></a>hci_read_remote_version_information_complete_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_events_cb.o(i.hci_read_remote_version_information_complete_event))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_read_remote_version_information_complete_event_process
</UL>

<P><STRONG><a name="[51]"></a>hci_read_remote_version_information_complete_event_process</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, bluenrg1_events.o(i.hci_read_remote_version_information_complete_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hci_read_remote_version_information_complete_event_process
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_read_remote_version_information_complete_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluenrg1_events.o(.constdata)
</UL>
<P><STRONG><a name="[132]"></a>hci_register_io_bus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hci_tl.o(i.hci_register_io_bus))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_tl_lowlevel_init
</UL>

<P><STRONG><a name="[9d]"></a>hci_reset</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, bluenrg1_hci_le.o(i.hci_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = hci_reset &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_Init
</UL>

<P><STRONG><a name="[fc]"></a>hci_send_req</STRONG> (Thumb, 382 bytes, Stack size 184 bytes, hci_tl.o(i.hci_send_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_head
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_is_empty
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_tail
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_head
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init_head
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_get_size
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_list
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_reset
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_scan_response_data
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rand
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_write_config_data
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_set_tx_power_level
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_update_char_value
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_service
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char_desc
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_discoverable
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_init
</UL>

<P><STRONG><a name="[11e]"></a>hci_tl_lowlevel_init</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, hci_tl_interface.o(i.hci_tl_lowlevel_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hci_tl_lowlevel_init &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_register_io_bus
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_EXTI_RegisterCallback
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_EXTI_GetHandle
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_init
</UL>

<P><STRONG><a name="[4e]"></a>hci_tl_lowlevel_isr</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, hci_tl_interface.o(i.hci_tl_lowlevel_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = hci_tl_lowlevel_isr &rArr; hci_notify_asynch_evt &rArr; list_remove_head
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_notify_asynch_evt
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsDataAvailable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hci_tl_interface.o(i.hci_tl_lowlevel_init)
</UL>
<P><STRONG><a name="[a8]"></a>hci_user_evt_proc</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, hci_tl.o(i.hci_user_evt_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = hci_user_evt_proc &rArr; list_remove_head
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_head
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_is_empty
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_tail
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_Loop
</UL>

<P><STRONG><a name="[130]"></a>list_get_size</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ble_list.o(i.list_get_size))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[11d]"></a>list_init_head</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_list.o(i.list_init_head))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[12d]"></a>list_insert_head</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ble_list.o(i.list_insert_head))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_notify_asynch_evt
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_list
</UL>

<P><STRONG><a name="[11f]"></a>list_insert_tail</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ble_list.o(i.list_insert_tail))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_notify_asynch_evt
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_user_evt_proc
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[12b]"></a>list_is_empty</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ble_list.o(i.list_is_empty))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_notify_asynch_evt
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_user_evt_proc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_list
</UL>

<P><STRONG><a name="[12c]"></a>list_remove_head</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, ble_list.o(i.list_remove_head))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = list_remove_head
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_node
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_notify_asynch_evt
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_user_evt_proc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[135]"></a>list_remove_node</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ble_list.o(i.list_remove_node))
<BR><BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_tail
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_head
</UL>

<P><STRONG><a name="[136]"></a>list_remove_tail</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, ble_list.o(i.list_remove_tail))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_node
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_list
</UL>

<P><STRONG><a name="[43]"></a>main</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = main &rArr; BlueNRG_Init &rArr; GAP_Peripheral_ConfigService &rArr; aci_gatt_add_char_desc &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM4_Init
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_MakeDeviceDiscoverable
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_Loop
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_Init
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a5]"></a>GAP_Peripheral_ConfigService</STRONG> (Thumb, 482 bytes, Stack size 200 bytes, ble_process.o(i.GAP_Peripheral_ConfigService))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = GAP_Peripheral_ConfigService &rArr; aci_gatt_add_char_desc &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_service
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char_desc
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_Init
</UL>

<P><STRONG><a name="[a6]"></a>Server_ResetConnectionStatus</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ble_process.o(i.Server_ResetConnectionStatus))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disconnection_complete_event
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_Init
</UL>

<P><STRONG><a name="[a2]"></a>Setup_DeviceAddress</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, ble_process.o(i.Setup_DeviceAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = Setup_DeviceAddress &rArr; aci_hal_write_config_data &rArr; hci_send_req &rArr; move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rand
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_write_config_data
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_Init
</UL>

<P><STRONG><a name="[de]"></a>MX_GPIO_Init</STRONG> (Thumb, 174 bytes, Stack size 48 bytes, main.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[df]"></a>MX_TIM2_Init</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, main.o(i.MX_TIM2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MX_TIM2_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e1]"></a>MX_TIM4_Init</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, main.o(i.MX_TIM4_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MX_TIM4_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[97]"></a>SPI1_MspInit</STRONG> (Thumb, 138 bytes, Stack size 48 bytes, custom_bus.o(i.SPI1_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SPI1_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SPI1_Init
</UL>

<P><STRONG><a name="[dc]"></a>IsDataAvailable</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, hci_tl_interface.o(i.IsDataAvailable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IsDataAvailable
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_tl_lowlevel_isr
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_TL_SPI_Send
</UL>

<P><STRONG><a name="[c1]"></a>SPI_EndRxTxTransaction</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, stm32f4xx_hal_spi.o(i.SPI_EndRxTxTransaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>

<P><STRONG><a name="[e2]"></a>SPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, stm32f4xx_hal_spi.o(i.SPI_WaitFlagStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>

<P><STRONG><a name="[bb]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[ca]"></a>TIM_ITRx_SetConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.TIM_ITRx_SetConfig))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[c8]"></a>TIM_TI1_ConfigInputStage</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.TIM_TI1_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TI1_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[c9]"></a>TIM_TI2_ConfigInputStage</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.TIM_TI2_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TI2_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[d5]"></a>UART_SetConfig</STRONG> (Thumb, 286 bytes, Stack size 24 bytes, stm32f4xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UART_SetConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[d8]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, stm32f4xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>

<P><STRONG><a name="[131]"></a>move_list</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, hci_tl.o(i.move_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = move_list &rArr; list_remove_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_tail
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_is_empty
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_head
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[eb]"></a>_printf_core</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfb.o(i._printf_core), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$bare
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
